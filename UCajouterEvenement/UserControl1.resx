<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBoxDelimitation.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>